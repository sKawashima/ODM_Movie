{"version":3,"sources":["app.js","js/odmm.js"],"names":["viewC","document","getElementById","viewCtx","getContext","analyzeC","analyzeCtx","view","viewHeight","app","img","Image","src","sample1","onload","matchSize","window","requestAnimationFrame","draw","vw","clientWidth","width","height","resolution","drawImage","imgData","getImageData","i","putImageData"],"mappings":";;;;;ACsCA,aAtCA,IAAA,EAAA,EAAA,QAAA,uBAsCA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApCA,IAAMA,EAAQC,SAASC,eAAe,QAChCC,EAAUH,EAAMI,WAAW,MAE3BC,EAAWJ,SAASC,eAAe,WACnCI,EAAaD,EAASD,WAAW,MAEjCG,EAAON,SAASC,eAAe,QAC/BM,EAAa,IAEbC,EAAM,GACZA,EAAG,KAAW,EAEd,IAAMC,EAAM,IAAIC,MAChBD,EAAIE,IAAMC,EAAV,QAEAH,EAAII,OAAS,WAIZC,IACAC,OAAOC,sBAAsBC,IAI9B,IAAMH,EAAY,WACVI,IAAAA,EAAKZ,EAAKa,YAChBpB,EAAMqB,MAAQF,EACdnB,EAAMsB,OAASd,EACfH,EAASgB,MAAQF,EACjBd,EAASiB,OAAS,IACZC,IAAAA,EAAaJ,EAAKT,EAAIW,MAC5BX,EAAIW,OAASE,EACbb,EAAIY,QAAUC,EACdjB,EAAWkB,UAAUd,EAAK,EAAG,EAAGA,EAAIW,MAAOX,EAAIY,SAG3CJ,EAAO,SAAPA,IAGC,IAFCO,IAAAA,EAAUnB,EAAWoB,aAAa,EAAGjB,EAAG,KAAUJ,EAASgB,MAAO,GAE/DM,EAAI,EAAGA,EAAInB,EAAYmB,IAC9BxB,EAAQyB,aAAaH,EAAS,EAAGE,GAGnClB,EAAG,OAIgB,GAAfA,EAAG,OACLA,EAAG,KAAWC,EAAIY,OAAO,GAE3BN,OAAOC,sBAAsBC;;;;ADjD/B,aAHA,QAAA,aACA,QAAA,gBAEA,QAAA","file":"app.bbcadbf0.map","sourceRoot":"../front","sourcesContent":["import 'reset-css'\nimport './style.sass'\n\nimport './js/*.js'\n","import sample1 from '../img/sample1.jpg'\n\nconst viewC = document.getElementById('odmm')\nconst viewCtx = viewC.getContext('2d')\n\nconst analyzeC = document.getElementById('analyze')\nconst analyzeCtx = analyzeC.getContext('2d')\n\nconst view = document.getElementById('view')\nconst viewHeight = 200\n\nconst app = []\napp['time'] = 1\n\nconst img = new Image()\nimg.src = sample1\n\nimg.onload = () => {\n  // Promise.resolve() // 順番に処理\n  //  .then(matchSize)\n  //  .then(draw)\n matchSize()\n window.requestAnimationFrame(draw)\n // draw()\n}\n\nconst matchSize = () => {\n  const vw = view.clientWidth // canvasのサイズ調整\n  viewC.width = vw\n  viewC.height = viewHeight\n  analyzeC.width = vw\n  analyzeC.height = 719\n  const resolution = vw / img.width // 画像のサイズ調整\n  img.width *= resolution\n  img.height *= resolution\n  analyzeCtx.drawImage(img, 0, 0, img.width, img.height)\n}\n\nconst draw = () => {\n  const imgData = analyzeCtx.getImageData(0, app['time'], analyzeC.width, 1) // 高さ1pxを解析\n\n  for (let i = 0; i < viewHeight; i++) { // 高さ1pxを引き伸ばして表示\n    viewCtx.putImageData(imgData, 0, i)\n  }\n\n  app['time']--\n  // if (app['time'] == img.height) {\n  //   app['time'] = 0\n  // }\n  if (app['time'] == 0) {\n    app['time'] = img.height-1\n  }\n  window.requestAnimationFrame(draw)\n}\n"]}